version: '3.8'

services:
  # 以太坊本地开发节点
  anvil:
    image: ghcr.io/foundry-rs/foundry:latest
    container_name: anvil
    command: >
      anvil
      --fork-url ${FORK_URL:-https://eth-mainnet.g.alchemy.com/v2/demo}
      --fork-block-number ${FORK_BLOCK:-17500000}
      --chain-id 1337
      --block-time 2
    ports:
      - "8545:8545"
    environment:
      - FORK_URL=${FORK_URL:-https://eth-mainnet.g.alchemy.com/v2/demo}
      - FORK_BLOCK=${FORK_BLOCK:-17500000}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8545"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Prometheus监控系统
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    restart: unless-stopped
    depends_on:
      - metrics-exporter

  # Grafana数据可视化
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
      - prometheus

  # 自定义指标导出器
  metrics-exporter:
    build:
      context: .
      dockerfile: ./metrics/Dockerfile
    container_name: metrics-exporter
    volumes:
      - ./metrics:/app/metrics
    ports:
      - "8000:8000"
    environment:
      - NODE_URL=http://anvil:8545
    restart: unless-stopped
    depends_on:
      anvil:
        condition: service_healthy

volumes:
  prometheus_data:
  grafana_data:
